@{
  ViewData["Title"] = "Login";
}


<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="login-container">
  <div class="frame">
    <div class="nav">
      <ul class="links">
        <li class="login-active"><a class="btn">Log in</a></li>

      </ul>
    </div>
    <div id="loading" class="loading" style="display: none;">
      <div class="spinner"></div>
      <p>Loading...</p>
    </div>
    <form id="loginform" class="form-login" action="" method="post" name="form">
      <label for="username">Email</label>
      <input class="form-styling" type="text" name="username" id="username" placeholder="Enter your email" />


      <label for="password">Password</label>
      <div class="password_container">
        <input class="form-styling" type="password" name="password" id="password" placeholder="Enter your password" />
        <i class="fa-solid fa-eye" id="togglePassword" style="cursor: pointer;"></i>
      </div>

      <div class="btn-animate">
        <button type="submit" class="btn-login">Log in</button>
      </div>
    </form>

    <div class="forgot">
      <a href="#" onclick="forgotPassword()">Forgot your password?</a>
    </div>

    <div id="toast" class="toast">Invalid username or password</div>
  </div>


</div>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  sessionStorage.getItem("popstat_called")
  const passwordField = document.getElementById("password");
  const togglePassword = document.getElementById("togglePassword");

  togglePassword.addEventListener("click", function () {
    // Toggle the password visibility
    const type =
      passwordField.getAttribute("type") === "password"
        ? "text"
        : "password";
    passwordField.setAttribute("type", type);

    // Toggle the eye / eye-slash icon
    this.classList.toggle("fa-eye");
    this.classList.toggle("fa-eye-slash");
  });

  function showToast() {
    var toast = document.getElementById("toast");
    toast.className = "toast show";
    setTimeout(function () { toast.className = toast.className.replace("show", ""); }, 3000); // Hide after 3 seconds
  }
  const loadingOverlay = document.getElementById("loading");
  document.getElementById("loginform").addEventListener("submit", function (event) {
    event.preventDefault();  // Prevent the form from submitting the traditional way

    var username = document.getElementById("username").value;
    var password = document.getElementById("password").value;
    if (!username || !password) {
      Toastify({
        text: "Please enter email and password",
        duration: 3000,
        close: true,
        gravity: "top",
        position: "center",
        backgroundColor: "orange",
      }).showToast();
      return;
    }
    var emailPattern = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;      // Perform simple email validation (optional)
    if (!emailPattern.test(username)) {
      Toastify({
        text: "Please enter a valid email",
        duration: 3000,
        close: true,
        gravity: "top",
        position: "center",
        backgroundColor: "red",
      }).showToast();
      return;
    }
    var jsonData = {
      email: username,
      password: password
    };
    loadingOverlay.style.display = "flex";
    console.log("Starting fetch request...");
    // Send the data to the Login API using fetch
    fetch("https://localhost:7003/api/Account/Login", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(jsonData)
    })


      .then(response => {
        console.log("Fetch request completed.");
        console.log("Response:", response);

        console.log("Status Code:", response.status);
        var email = document.getElementById("username").value
        if (response.status === 200 && response.redirected === true) {
          var encodedEmail = btoa(email);
          console.log(encodedEmail);
          window.location.href = `Home/Change_Password?email=${encodedEmail}`
        }
        else if (response.status === 401) {
          // Show login failed message for invalid credentials
          Toastify({
            text: "Invalid username or password",
            duration: 3000,
            close: true,
            gravity: "top",
            position: "right",
            backgroundColor: "red",
          }).showToast();

          throw new Error("Invalid username or password");
        }
        else if (response.status !== 200) {
          // Show login failed message for invalid credentials
          Toastify({
            text: "Login failed: " + response.status,
            duration: 3000,
            close: true,
            gravity: "top",
            position: "right",
            backgroundColor: "red",
          }).showToast();

          throw new Error("Login failed");
        }

        // For successful response (200)
        return response.json();
      })
      .then(data => {
        Toastify({
          text: "Login successful!",
          duration: 3000,  // 3 seconds
          close: true,
          gravity: "top",
          position: "center",
          backgroundColor: "green",
        }).showToast();
    const userData = data.value[0];
        @* console.log("user no" + userData.No) *@
          console.log("data" + JSON.stringify(data));
        sessionStorage.setItem("isLoggedIn", "true");
        sessionStorage.setItem("UniqueNo", userData.No);
        sessionStorage.setItem("userData", JSON.stringify(data.value[0]));
        setTimeout(function () {
          window.location.href = "/Home/Customer_Home";
        }, 1000);

      })
  @* .catch(error => {
      console.error("Error:", error);
      // Show error toast notification
        Toastify({
          text: "An error occurred!",
          duration: 3000,
          close: true,
          gravity: "top",  // 'top' or 'bottom'
          position: "center",  // 'left', 'center' or 'right'
      backgroundColor: "orange",
      }).showToast();
      }); *@
      .finally(() => {
        // Hide loading overlay
        loadingOverlay.style.display = "none";
      });
  });



  // onclick forget password function
  function forgotPassword() {
    var email = document.getElementById("username").value;
    // Check if the email field is empty
    if (!email) {
      Toastify({
        text: "Please enter your email",
        duration: 3000,
        close: true,
        gravity: "top",
        position: "center",
        backgroundColor: "orange",
      }).showToast();
      return;  // Stop further execution
    }

    var emailPattern = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;      // Perform simple email validation (optional)
    if (!emailPattern.test(email)) {
      Toastify({
        text: "Please enter a valid email",
        duration: 3000,
        close: true,
        gravity: "top",
        position: "center",
        backgroundColor: "red",
      }).showToast();
      return;  // Stop further execution
    }

    loadingOverlay.style.display = "flex";
    // Call the API to trigger the GenerateTempPassword procedure
    fetch("https://localhost:7003/api/Account/ForgetPassword", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ email: email })
    })
      .then(response => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Success - Temp password generated
          Toastify({
            text: "A temporary password has been sent to your email.",
            duration: 3000,
            close: true,
            gravity: "top",
            position: "center",
            backgroundColor: "green",
          }).showToast();
        } else {
          // Procedure returned false
          Toastify({
            text: "Error: Email not found or invalid.",
            duration: 3000,
            close: true,
            gravity: "top",
            position: "center",
            backgroundColor: "red",
          }).showToast();
        }
      })
      @* .catch(error => {
        console.error("Error:", error);
        // Show error toast notification
        Toastify({
          text: "An error occurred!",
          duration: 3000,
          close: true,
          gravity: "top",
          position: "center",
          backgroundColor: "orange",
        }).showToast();
      }); *@
      .finally(() => {
        // Hide loading overlay
        loadingOverlay.style.display = "none";
      })
    
  }
</script>
